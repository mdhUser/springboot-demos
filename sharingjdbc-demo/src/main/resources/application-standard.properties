spring.shardingsphere.datasource.names=ds1,ds2

#配置数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/order_db_1?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC


spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=root
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://localhost:3306/order_db_2?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC

# 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持 standard 表达式。
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{1..2}.t_order_$->{1..2}

# 定义库分片
#分片列名称
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
# 分片算法行表达式，需符合 groovy 语法
# 精确分片算法类名称，用于 = 和 IN。该类需实现 PreciseShardingAlgorithm 接口并提供无参数的构造器
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=org.maxwell.shardingjdbc.strategy.Sharding4db
# 范围分片算法类名称，用于 BETWEEN，可选。该类需实现 RangeShardingAlgorithm 接口并提供无参数的构造器
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.range-algorithm-class-name=org.maxwell.shardingjdbc.strategy.ShardingRange4db
# 行表达式分片策略
# 分片列名称
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
## 分片算法行表达式，需符合 groovy 语法
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=org.maxwell.shardingjdbc.strategy.Sharding4tb
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.range-algorithm-class-name=org.maxwell.shardingjdbc.strategy.ShardingRange4tb


##可直接只配节点(垂直拆分)
#spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds3.t_user
# 分片列名称 在库和表直接定位时，分片键可以不指定
#spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.sharding-column=user_id
# 分片算法行表达式，需符合 groovy 语法
#spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.algorithm-expression=t_user

# 指定t_dict为公共表，多个公共表以逗号间隔
spring.shardingsphere.sharding.broadcast‐tables=t_dict
#打印SQL
spring.shardingsphere.props.sql.show=true